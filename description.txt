这个项目是基于Python语言的Django web框架开发的，
其中前端页面使用Django的模板语言、JS和CSS实现，
并由Django模板引擎渲染模板，生成真正的HTML文件；JS实现界面的动态效果；CSS规定了界面的样式。
Django提供了一整套命令行工具，结合项目设置，可用于项目全生命周期的
项目生成、数据库迁移、框架开发和产品测试，本项目使用用Django框架自带的轻量级服务器，并连接sqlite3作为数据库后台。
使用Django来进行开发，极大的缩小了开发的时间和难度：整个项目具有鲁棒性，模块化，低耦合，高内聚的特点。
从技术方面本项目是可运行，可拓展的。

功能拓展

1.实现推荐系统
在一般成熟的交易平台都有较优良的产品推荐算法，本平台仅通过遍历的方法展示商品，没有根据用户的喜好、点评、记录等内容进行自动化的商品推介。
拟定将来拓展商品推荐算法模块（在utils模块中）。由于本平台数据体量不大，因此拟使用相似向量算法作为具体的推荐算法。
2.改进多用户同时登陆
由于登录判定由修饰器user_decorator.login完成，因此更改此修饰器的结构，使其支持多用户同时访问是一种合理的改进策略这同时涉及到并发处理的问题，
这还有待后续的学习。另外后台由统一管理，没有区分管理级别用户的类型，这也是需要改进的方面。
3.部署服务器后端到Apache、Nginx或云上
本项目仅仅运行在Django自带的微型服务器上，这不足以支撑一个真正的项目，后续要部署项目还需利用Python的WSGI接口，将Django项目部署到
真正的服务器上。


跳蚤市场项目
	购物车管理子系统
	货物管理子系统
	订单管理子系统
	用户管理子系统
	管理员子系统
df_cart_cartinfo
df_goods_typeinfo
df_goods_goodsinfo
df_goods_goodscontent
df_goods_contentchart
df_order_orderinfo
df_order_orderdetailinfo
df_user_userinfo
df_user_goodsbrowser
df_user_information
df_user_tuihuoinfo
··· ···
购物车表
商品分类信息
具体商品信息
用户评论
评论回复
大订单
大订单中的具体某一商品订单
用户信息
用户浏览记录
用户消息
退款订单
Django自动生成


	